/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function() {
var exports = {};
exports.id = "pages/api/owners";
exports.ids = ["pages/api/owners"];
exports.modules = {

/***/ "./lib/mongodb.js":
/*!************************!*\
  !*** ./lib/mongodb.js ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"connectToDatabase\": function() { return /* binding */ connectToDatabase; }\n/* harmony export */ });\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_0__);\n\nconst MONGODB_URI = process.env.MONGODB_URI;\nconst MONGODB_DB = process.env.DB_NAME; // check the MongoDB URI\n\nif (!MONGODB_URI) {\n  throw new Error('Define the MONGODB_URI environmental variable');\n} // check the MongoDB DB\n\n\nif (!MONGODB_DB) {\n  throw new Error('Define the MONGODB_DB environmental variable');\n}\n\nlet cachedClient = null;\nlet cachedDb = null;\nasync function connectToDatabase() {\n  // check the cached.\n\n  /*\n  if (cachedClient && cachedDb) {\n      // load from cache\n      return {\n          client: cachedClient,\n          db: cachedDb,\n      };\n  }\n  */\n  // set the connection options\n  const opts = {\n    useNewUrlParser: true,\n    useUnifiedTopology: true\n  }; // Connect to cluster\n\n  let client = new mongodb__WEBPACK_IMPORTED_MODULE_0__.MongoClient(MONGODB_URI, opts);\n  await client.connect();\n  let db = client.db(MONGODB_DB); // set cache\n\n  cachedClient = client;\n  cachedDb = db;\n  return {\n    client: cachedClient,\n    db: cachedDb\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93aXRoLXRhaWx3aW5kY3NzLy4vbGliL21vbmdvZGIuanM/ZmI2NiJdLCJuYW1lcyI6WyJNT05HT0RCX1VSSSIsInByb2Nlc3MiLCJlbnYiLCJNT05HT0RCX0RCIiwiREJfTkFNRSIsIkVycm9yIiwiY2FjaGVkQ2xpZW50IiwiY2FjaGVkRGIiLCJjb25uZWN0VG9EYXRhYmFzZSIsIm9wdHMiLCJ1c2VOZXdVcmxQYXJzZXIiLCJ1c2VVbmlmaWVkVG9wb2xvZ3kiLCJjbGllbnQiLCJNb25nb0NsaWVudCIsImNvbm5lY3QiLCJkYiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFFQSxNQUFNQSxXQUFXLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixXQUFoQztBQUNBLE1BQU1HLFVBQVUsR0FBR0YsT0FBTyxDQUFDQyxHQUFSLENBQVlFLE9BQS9CLEMsQ0FFQTs7QUFDQSxJQUFJLENBQUNKLFdBQUwsRUFBa0I7QUFDZCxRQUFNLElBQUlLLEtBQUosQ0FBVSwrQ0FBVixDQUFOO0FBQ0gsQyxDQUVEOzs7QUFDQSxJQUFJLENBQUNGLFVBQUwsRUFBaUI7QUFDYixRQUFNLElBQUlFLEtBQUosQ0FBVSw4Q0FBVixDQUFOO0FBQ0g7O0FBRUQsSUFBSUMsWUFBWSxHQUFHLElBQW5CO0FBQ0EsSUFBSUMsUUFBUSxHQUFHLElBQWY7QUFFTyxlQUFlQyxpQkFBZixHQUFtQztBQUN0Qzs7QUFDQTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFSTtBQUNBLFFBQU1DLElBQUksR0FBRztBQUNUQyxtQkFBZSxFQUFFLElBRFI7QUFFVEMsc0JBQWtCLEVBQUU7QUFGWCxHQUFiLENBYnNDLENBa0J0Qzs7QUFDQSxNQUFJQyxNQUFNLEdBQUcsSUFBSUMsZ0RBQUosQ0FBZ0JiLFdBQWhCLEVBQTZCUyxJQUE3QixDQUFiO0FBQ0EsUUFBTUcsTUFBTSxDQUFDRSxPQUFQLEVBQU47QUFDQSxNQUFJQyxFQUFFLEdBQUdILE1BQU0sQ0FBQ0csRUFBUCxDQUFVWixVQUFWLENBQVQsQ0FyQnNDLENBdUJ0Qzs7QUFDQUcsY0FBWSxHQUFHTSxNQUFmO0FBQ0FMLFVBQVEsR0FBR1EsRUFBWDtBQUVBLFNBQU87QUFDSEgsVUFBTSxFQUFFTixZQURMO0FBRUhTLE1BQUUsRUFBRVI7QUFGRCxHQUFQO0FBSUgiLCJmaWxlIjoiLi9saWIvbW9uZ29kYi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1vbmdvQ2xpZW50IH0gZnJvbSAnbW9uZ29kYic7XG5cbmNvbnN0IE1PTkdPREJfVVJJID0gcHJvY2Vzcy5lbnYuTU9OR09EQl9VUkk7XG5jb25zdCBNT05HT0RCX0RCID0gcHJvY2Vzcy5lbnYuREJfTkFNRTtcblxuLy8gY2hlY2sgdGhlIE1vbmdvREIgVVJJXG5pZiAoIU1PTkdPREJfVVJJKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdEZWZpbmUgdGhlIE1PTkdPREJfVVJJIGVudmlyb25tZW50YWwgdmFyaWFibGUnKTtcbn1cblxuLy8gY2hlY2sgdGhlIE1vbmdvREIgREJcbmlmICghTU9OR09EQl9EQikge1xuICAgIHRocm93IG5ldyBFcnJvcignRGVmaW5lIHRoZSBNT05HT0RCX0RCIGVudmlyb25tZW50YWwgdmFyaWFibGUnKTtcbn1cblxubGV0IGNhY2hlZENsaWVudCA9IG51bGw7XG5sZXQgY2FjaGVkRGIgPSBudWxsO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY29ubmVjdFRvRGF0YWJhc2UoKSB7XG4gICAgLy8gY2hlY2sgdGhlIGNhY2hlZC5cbiAgICAvKlxuICAgIGlmIChjYWNoZWRDbGllbnQgJiYgY2FjaGVkRGIpIHtcbiAgICAgICAgLy8gbG9hZCBmcm9tIGNhY2hlXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBjbGllbnQ6IGNhY2hlZENsaWVudCxcbiAgICAgICAgICAgIGRiOiBjYWNoZWREYixcbiAgICAgICAgfTtcbiAgICB9XG4gICAgKi9cblxuICAgIC8vIHNldCB0aGUgY29ubmVjdGlvbiBvcHRpb25zXG4gICAgY29uc3Qgb3B0cyA9IHtcbiAgICAgICAgdXNlTmV3VXJsUGFyc2VyOiB0cnVlLFxuICAgICAgICB1c2VVbmlmaWVkVG9wb2xvZ3k6IHRydWUsXG4gICAgfTtcblxuICAgIC8vIENvbm5lY3QgdG8gY2x1c3RlclxuICAgIGxldCBjbGllbnQgPSBuZXcgTW9uZ29DbGllbnQoTU9OR09EQl9VUkksIG9wdHMpO1xuICAgIGF3YWl0IGNsaWVudC5jb25uZWN0KCk7XG4gICAgbGV0IGRiID0gY2xpZW50LmRiKE1PTkdPREJfREIpO1xuXG4gICAgLy8gc2V0IGNhY2hlXG4gICAgY2FjaGVkQ2xpZW50ID0gY2xpZW50O1xuICAgIGNhY2hlZERiID0gZGI7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICBjbGllbnQ6IGNhY2hlZENsaWVudCxcbiAgICAgICAgZGI6IGNhY2hlZERiLFxuICAgIH07XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/mongodb.js\n");

/***/ }),

/***/ "./pages/api/owners.js":
/*!*****************************!*\
  !*** ./pages/api/owners.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ handler; }\n/* harmony export */ });\nconst {\n  connectToDatabase\n} = __webpack_require__(/*! ../../lib/mongodb */ \"./lib/mongodb.js\");\n\nconst ObjectId = __webpack_require__(/*! mongodb */ \"mongodb\").ObjectId;\n\nasync function handler(req, res) {\n  // switch the methods\n  switch (req.method) {\n    case 'GET':\n      {\n        return getSocials(req, res);\n      }\n\n    case 'POST':\n      {\n        return addSocials(req, res);\n      }\n\n    case 'PUT':\n      {\n        return updateSocials(req, res);\n      }\n\n    case 'DELETE':\n      {\n        return deletePost(req, res);\n      }\n  }\n}\n\nasync function addSocials(req, res) {\n  try {\n    // connect to the database\n    let {\n      db\n    } = await connectToDatabase(); // add the post\n\n    await db.collection('Accounts').insertOne(JSON.parse(req.body)); // return a message\n\n    return res.json({\n      message: 'Account added successfully',\n      success: true\n    });\n  } catch (error) {\n    // return an error\n    return res.json({\n      message: new Error(error).message,\n      success: false\n    });\n  }\n}\n\nasync function getSocials(req, res) {\n  try {\n    // connect to the database\n    let {\n      db\n    } = await connectToDatabase(); // fetch the posts\n\n    let posts = await db.collection('Accounts').find({}).toArray(); // return the posts\n\n    return res.json({\n      message: JSON.parse(JSON.stringify(posts)),\n      success: true\n    });\n  } catch (error) {\n    // return the error\n    return res.json({\n      message: new Error(error).message,\n      success: false\n    });\n  }\n}\n\nasync function updateSocials(req, res) {\n  try {\n    // connect to the database\n    let {\n      db\n    } = await connectToDatabase(); // update the published status of the post\n\n    await db.collection('Accounts').updateOne({\n      _id: new ObjectId(JSON.parse(req.body).id)\n    }, {\n      $set: {\n        twitter: JSON.parse(req.body).twitter,\n        instagram: JSON.parse(req.body).instagram\n      }\n    }); // return a message\n\n    return res.json({\n      message: 'Post updated successfully',\n      success: true\n    });\n  } catch (error) {\n    // return an error\n    return res.json({\n      message: new Error(error).message,\n      success: false\n    });\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93aXRoLXRhaWx3aW5kY3NzLy4vcGFnZXMvYXBpL293bmVycy5qcz9mMmViIl0sIm5hbWVzIjpbImNvbm5lY3RUb0RhdGFiYXNlIiwicmVxdWlyZSIsIk9iamVjdElkIiwiaGFuZGxlciIsInJlcSIsInJlcyIsIm1ldGhvZCIsImdldFNvY2lhbHMiLCJhZGRTb2NpYWxzIiwidXBkYXRlU29jaWFscyIsImRlbGV0ZVBvc3QiLCJkYiIsImNvbGxlY3Rpb24iLCJpbnNlcnRPbmUiLCJKU09OIiwicGFyc2UiLCJib2R5IiwianNvbiIsIm1lc3NhZ2UiLCJzdWNjZXNzIiwiZXJyb3IiLCJFcnJvciIsInBvc3RzIiwiZmluZCIsInRvQXJyYXkiLCJzdHJpbmdpZnkiLCJ1cGRhdGVPbmUiLCJfaWQiLCJpZCIsIiRzZXQiLCJ0d2l0dGVyIiwiaW5zdGFncmFtIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUEsTUFBTTtBQUFFQTtBQUFGLElBQXdCQyxtQkFBTyxDQUFDLDJDQUFELENBQXJDOztBQUNBLE1BQU1DLFFBQVEsR0FBR0Qsc0RBQWpCOztBQUVlLGVBQWVFLE9BQWYsQ0FBdUJDLEdBQXZCLEVBQTRCQyxHQUE1QixFQUFpQztBQUM1QztBQUNBLFVBQVFELEdBQUcsQ0FBQ0UsTUFBWjtBQUNJLFNBQUssS0FBTDtBQUFZO0FBQ1IsZUFBT0MsVUFBVSxDQUFDSCxHQUFELEVBQU1DLEdBQU4sQ0FBakI7QUFDSDs7QUFFRCxTQUFLLE1BQUw7QUFBYTtBQUNULGVBQU9HLFVBQVUsQ0FBQ0osR0FBRCxFQUFNQyxHQUFOLENBQWpCO0FBQ0g7O0FBRUQsU0FBSyxLQUFMO0FBQVk7QUFDUixlQUFPSSxhQUFhLENBQUNMLEdBQUQsRUFBTUMsR0FBTixDQUFwQjtBQUNIOztBQUVELFNBQUssUUFBTDtBQUFlO0FBQ1gsZUFBT0ssVUFBVSxDQUFDTixHQUFELEVBQU1DLEdBQU4sQ0FBakI7QUFDSDtBQWZMO0FBaUJIOztBQUVELGVBQWVHLFVBQWYsQ0FBMEJKLEdBQTFCLEVBQStCQyxHQUEvQixFQUFvQztBQUNoQyxNQUFJO0FBQ0E7QUFDQSxRQUFJO0FBQUVNO0FBQUYsUUFBUyxNQUFNWCxpQkFBaUIsRUFBcEMsQ0FGQSxDQUdBOztBQUNBLFVBQU1XLEVBQUUsQ0FBQ0MsVUFBSCxDQUFjLFVBQWQsRUFBMEJDLFNBQTFCLENBQW9DQyxJQUFJLENBQUNDLEtBQUwsQ0FBV1gsR0FBRyxDQUFDWSxJQUFmLENBQXBDLENBQU4sQ0FKQSxDQUtBOztBQUNBLFdBQU9YLEdBQUcsQ0FBQ1ksSUFBSixDQUFTO0FBQ1pDLGFBQU8sRUFBRSw0QkFERztBQUVaQyxhQUFPLEVBQUU7QUFGRyxLQUFULENBQVA7QUFJSCxHQVZELENBVUUsT0FBT0MsS0FBUCxFQUFjO0FBQ1o7QUFDQSxXQUFPZixHQUFHLENBQUNZLElBQUosQ0FBUztBQUNaQyxhQUFPLEVBQUUsSUFBSUcsS0FBSixDQUFVRCxLQUFWLEVBQWlCRixPQURkO0FBRVpDLGFBQU8sRUFBRTtBQUZHLEtBQVQsQ0FBUDtBQUlIO0FBQ0o7O0FBRUQsZUFBZVosVUFBZixDQUEwQkgsR0FBMUIsRUFBOEJDLEdBQTlCLEVBQWtDO0FBQzlCLE1BQUk7QUFDQTtBQUNBLFFBQUk7QUFBRU07QUFBRixRQUFTLE1BQU1YLGlCQUFpQixFQUFwQyxDQUZBLENBR0E7O0FBQ0EsUUFBSXNCLEtBQUssR0FBRyxNQUFNWCxFQUFFLENBQ2ZDLFVBRGEsQ0FDRixVQURFLEVBRWJXLElBRmEsQ0FFUixFQUZRLEVBR2JDLE9BSGEsRUFBbEIsQ0FKQSxDQVFBOztBQUNBLFdBQU9uQixHQUFHLENBQUNZLElBQUosQ0FBUztBQUNaQyxhQUFPLEVBQUVKLElBQUksQ0FBQ0MsS0FBTCxDQUFXRCxJQUFJLENBQUNXLFNBQUwsQ0FBZUgsS0FBZixDQUFYLENBREc7QUFFWkgsYUFBTyxFQUFFO0FBRkcsS0FBVCxDQUFQO0FBSUgsR0FiRCxDQWFFLE9BQU9DLEtBQVAsRUFBYztBQUNaO0FBQ0EsV0FBT2YsR0FBRyxDQUFDWSxJQUFKLENBQVM7QUFDWkMsYUFBTyxFQUFFLElBQUlHLEtBQUosQ0FBVUQsS0FBVixFQUFpQkYsT0FEZDtBQUVaQyxhQUFPLEVBQUU7QUFGRyxLQUFULENBQVA7QUFJSDtBQUNKOztBQUVELGVBQWVWLGFBQWYsQ0FBNkJMLEdBQTdCLEVBQWtDQyxHQUFsQyxFQUF1QztBQUNuQyxNQUFJO0FBQ0E7QUFDQSxRQUFJO0FBQUVNO0FBQUYsUUFBUyxNQUFNWCxpQkFBaUIsRUFBcEMsQ0FGQSxDQUlBOztBQUNBLFVBQU1XLEVBQUUsQ0FBQ0MsVUFBSCxDQUFjLFVBQWQsRUFBMEJjLFNBQTFCLENBQ0Y7QUFDSUMsU0FBRyxFQUFFLElBQUl6QixRQUFKLENBQWFZLElBQUksQ0FBQ0MsS0FBTCxDQUFXWCxHQUFHLENBQUNZLElBQWYsRUFBcUJZLEVBQWxDO0FBRFQsS0FERSxFQUlGO0FBQUVDLFVBQUksRUFBRTtBQUFFQyxlQUFPLEVBQUVoQixJQUFJLENBQUNDLEtBQUwsQ0FBV1gsR0FBRyxDQUFDWSxJQUFmLEVBQXFCYyxPQUFoQztBQUNSQyxpQkFBUyxFQUFFakIsSUFBSSxDQUFDQyxLQUFMLENBQVdYLEdBQUcsQ0FBQ1ksSUFBZixFQUFxQmU7QUFEeEI7QUFBUixLQUpFLENBQU4sQ0FMQSxDQWFBOztBQUNBLFdBQU8xQixHQUFHLENBQUNZLElBQUosQ0FBUztBQUNaQyxhQUFPLEVBQUUsMkJBREc7QUFFWkMsYUFBTyxFQUFFO0FBRkcsS0FBVCxDQUFQO0FBSUgsR0FsQkQsQ0FrQkUsT0FBT0MsS0FBUCxFQUFjO0FBRVo7QUFDQSxXQUFPZixHQUFHLENBQUNZLElBQUosQ0FBUztBQUNaQyxhQUFPLEVBQUUsSUFBSUcsS0FBSixDQUFVRCxLQUFWLEVBQWlCRixPQURkO0FBRVpDLGFBQU8sRUFBRTtBQUZHLEtBQVQsQ0FBUDtBQUlIO0FBQ0oiLCJmaWxlIjoiLi9wYWdlcy9hcGkvb3duZXJzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBjb25uZWN0VG9EYXRhYmFzZSB9ID0gcmVxdWlyZSgnLi4vLi4vbGliL21vbmdvZGInKTtcbmNvbnN0IE9iamVjdElkID0gcmVxdWlyZSgnbW9uZ29kYicpLk9iamVjdElkO1xuXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBoYW5kbGVyKHJlcSwgcmVzKSB7XG4gICAgLy8gc3dpdGNoIHRoZSBtZXRob2RzXG4gICAgc3dpdGNoIChyZXEubWV0aG9kKSB7XG4gICAgICAgIGNhc2UgJ0dFVCc6IHtcbiAgICAgICAgICAgIHJldHVybiBnZXRTb2NpYWxzKHJlcSwgcmVzKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNhc2UgJ1BPU1QnOiB7XG4gICAgICAgICAgICByZXR1cm4gYWRkU29jaWFscyhyZXEsIHJlcyk7XG4gICAgICAgIH1cblxuICAgICAgICBjYXNlICdQVVQnOiB7XG4gICAgICAgICAgICByZXR1cm4gdXBkYXRlU29jaWFscyhyZXEsIHJlcyk7XG4gICAgICAgIH1cblxuICAgICAgICBjYXNlICdERUxFVEUnOiB7XG4gICAgICAgICAgICByZXR1cm4gZGVsZXRlUG9zdChyZXEsIHJlcyk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGFkZFNvY2lhbHMocmVxLCByZXMpIHtcbiAgICB0cnkge1xuICAgICAgICAvLyBjb25uZWN0IHRvIHRoZSBkYXRhYmFzZVxuICAgICAgICBsZXQgeyBkYiB9ID0gYXdhaXQgY29ubmVjdFRvRGF0YWJhc2UoKTtcbiAgICAgICAgLy8gYWRkIHRoZSBwb3N0XG4gICAgICAgIGF3YWl0IGRiLmNvbGxlY3Rpb24oJ0FjY291bnRzJykuaW5zZXJ0T25lKEpTT04ucGFyc2UocmVxLmJvZHkpKTtcbiAgICAgICAgLy8gcmV0dXJuIGEgbWVzc2FnZVxuICAgICAgICByZXR1cm4gcmVzLmpzb24oe1xuICAgICAgICAgICAgbWVzc2FnZTogJ0FjY291bnQgYWRkZWQgc3VjY2Vzc2Z1bGx5JyxcbiAgICAgICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgIH0pO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIC8vIHJldHVybiBhbiBlcnJvclxuICAgICAgICByZXR1cm4gcmVzLmpzb24oe1xuICAgICAgICAgICAgbWVzc2FnZTogbmV3IEVycm9yKGVycm9yKS5tZXNzYWdlLFxuICAgICAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIH0pO1xuICAgIH1cbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0U29jaWFscyhyZXEscmVzKXtcbiAgICB0cnkge1xuICAgICAgICAvLyBjb25uZWN0IHRvIHRoZSBkYXRhYmFzZVxuICAgICAgICBsZXQgeyBkYiB9ID0gYXdhaXQgY29ubmVjdFRvRGF0YWJhc2UoKTtcbiAgICAgICAgLy8gZmV0Y2ggdGhlIHBvc3RzXG4gICAgICAgIGxldCBwb3N0cyA9IGF3YWl0IGRiXG4gICAgICAgICAgICAuY29sbGVjdGlvbignQWNjb3VudHMnKVxuICAgICAgICAgICAgLmZpbmQoe30pXG4gICAgICAgICAgICAudG9BcnJheSgpO1xuICAgICAgICAvLyByZXR1cm4gdGhlIHBvc3RzXG4gICAgICAgIHJldHVybiByZXMuanNvbih7XG4gICAgICAgICAgICBtZXNzYWdlOiBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHBvc3RzKSksXG4gICAgICAgICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgICB9KTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAvLyByZXR1cm4gdGhlIGVycm9yXG4gICAgICAgIHJldHVybiByZXMuanNvbih7XG4gICAgICAgICAgICBtZXNzYWdlOiBuZXcgRXJyb3IoZXJyb3IpLm1lc3NhZ2UsXG4gICAgICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuXG5hc3luYyBmdW5jdGlvbiB1cGRhdGVTb2NpYWxzKHJlcSwgcmVzKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gY29ubmVjdCB0byB0aGUgZGF0YWJhc2VcbiAgICAgICAgbGV0IHsgZGIgfSA9IGF3YWl0IGNvbm5lY3RUb0RhdGFiYXNlKCk7XG5cbiAgICAgICAgLy8gdXBkYXRlIHRoZSBwdWJsaXNoZWQgc3RhdHVzIG9mIHRoZSBwb3N0XG4gICAgICAgIGF3YWl0IGRiLmNvbGxlY3Rpb24oJ0FjY291bnRzJykudXBkYXRlT25lKFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIF9pZDogbmV3IE9iamVjdElkKEpTT04ucGFyc2UocmVxLmJvZHkpLmlkKVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHsgJHNldDogeyB0d2l0dGVyOiBKU09OLnBhcnNlKHJlcS5ib2R5KS50d2l0dGVyLFxuICAgICAgICAgICAgaW5zdGFncmFtOiBKU09OLnBhcnNlKHJlcS5ib2R5KS5pbnN0YWdyYW19fVxuICAgICAgICApO1xuXG4gICAgICAgIC8vIHJldHVybiBhIG1lc3NhZ2VcbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKHtcbiAgICAgICAgICAgIG1lc3NhZ2U6ICdQb3N0IHVwZGF0ZWQgc3VjY2Vzc2Z1bGx5JyxcbiAgICAgICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgIH0pO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG5cbiAgICAgICAgLy8gcmV0dXJuIGFuIGVycm9yXG4gICAgICAgIHJldHVybiByZXMuanNvbih7XG4gICAgICAgICAgICBtZXNzYWdlOiBuZXcgRXJyb3IoZXJyb3IpLm1lc3NhZ2UsXG4gICAgICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgfSk7XG4gICAgfVxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/api/owners.js\n");

/***/ }),

/***/ "mongodb":
/*!**************************!*\
  !*** external "mongodb" ***!
  \**************************/
/***/ (function(module) {

"use strict";
module.exports = require("mongodb");;

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
var __webpack_exports__ = (__webpack_exec__("./pages/api/owners.js"));
module.exports = __webpack_exports__;

})();